[
  {
    "title": "Computer Science Department Seminar",
    "code": "E81 CSE 100A",
    "description": "This seminar will host faculty, alumni, and professionals to discuss topics related to the study and practice of computer science. Attendance is mandatory to receive a passing grade.",
    "units": 0,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=100A",
    "prerequisites": ""
  },
  {
    "title": "Data Science Playground",
    "code": "E81 CSE 107",
    "description": "Data science plays an increasingly important role in research, industry, and government. Researchers seek to understand behavior and mechanisms, companies seek to increase profits, and government agencies make policies intended to improve society. While we are awash in an abundance of data, making sense of data is not always straightforward. At its core, students of data science learn techniques for analyzing, visualizing, and understanding data. However, students must also cultivate curiosity about data, including the data's provenance, ethical considerations such as bias, and skepticism concerning correlation and causality. In the beginning, students investigate a curated collection of data sets, asking questions they find interesting and exploring data using a popular platform for such studies. Thereafter, researchers on campus present their work in the context of data science, challenging students to explore data in the domain of their research areas. Throughout the course, students present their findings in their group and to the class. This course is offered in an active-learning setting in which students work in small teams. The course has no prerequisites, and programming experience is neither expected nor required. All credit for this pass/fail course is based on work performed in the scheduled class time.",
    "units": 1,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=107",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Computer Science",
    "code": "E81 CSE 131",
    "description": "An introduction to software concepts and implementation, emphasizing problem solving through abstraction and decomposition. Introduces processes and algorithms, procedural abstraction, data abstraction, encapsulation, and object-oriented programming. Recursion, iteration, and simple data structures are covered. Concepts and skills are mastered through programming projects, many of which employ graphics to enhance conceptual understanding. Java, an object-oriented programming language, is the vehicle of exploration. Active-learning sessions are conducted in a studio setting in which students interact with each other and the professor to solve problems collaboratively.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=131",
    "prerequisites": "Comfort with algebra and geometry at the high school level is assumed. Patience, good planning, and organization will promote success. This course assumes no prior experience with programming"
  },
  {
    "title": "Seminar: Computer Science I",
    "code": "E81 CSE 131R",
    "description": "A seminar and discussion session that complements the material studied in CSE131. Provides background and breadth for the disciplines of computer science and computer engineering. Features guest lectures and highly interactive discussions of diverse computer science topics. Highly recommended for majors and for any student seeking a broader view of computer science or computer engineering. Pass/Fail only.",
    "units": 1,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=131R",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Computer Engineering",
    "code": "E81 CSE 132",
    "description": "This course introduces students to fundamental concepts in the basic operation of computers, ranging from desktops and servers to microcontrollers and handheld devices. Subjects include digital and analog input/output, sensing the physical world, information representation, basic computer architecture and machine language, time-critical computation, machine-to-machine communication and protocol design. Students will use both desktop systems and handheld microcontrollers for laboratory experiments. Active-learning sessions are conducted in a studio setting in which students interact with each other and the professor to solve problems collaboratively.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=132",
    "prerequisites": "CSE 131"
  },
  {
    "title": "Seminar: Computer Science II",
    "code": "E81 CSE 132R",
    "description": "This course is a seminar and discussion session that complements the material studied in CSE 132. It provides background and breadth for the disciplines of computer science and computer engineering, and it features guest lectures and highly interactive discussions of diverse computer science topics. Highly recommended for majors and for any student seeking a broader view of computer science or computer engineering.",
    "units": 1,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=132R",
    "prerequisites": ""
  },
  {
    "title": "Web Development",
    "code": "E81 CSE 204A",
    "description": "This course explores elementary principles for designing, creating, and publishing effective websites and web application front-ends. Topics include page layout concepts, design principles, HTML, CSS, JavaScript, front-end frameworks like Angular and React, and other development tools. Students apply the topics by creating a series of websites that are judged based on their design and implementation.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=204A",
    "prerequisites": "CSE 131 or equivalent experience"
  },
  {
    "title": "Introduction to Data Science",
    "code": "E81 CSE 217A",
    "description": "This course provides an introduction to data science and machine learning, and it focuses on the practical application of models to real-world supervised and unsupervised learning problems. We will discuss methods for linear regression, classification, and clustering and apply them to perform sentiment analysis, implement a recommendation system, and perform image classification or gesture recognition. One of the main objectives of the course is to become familiar with the data science workflow, from posing a problem to understanding and preparing the data, training and evaluating a model, and then presenting and interpreting the results. We will also touch on concepts such as similarity-based learning, feature engineering, data manipulation, and visualization. The course uses Python, which is currently the most popular programming language for data science. This course does not teach programming in Python.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=217A",
    "prerequisites": "CSE 131, MATH 233, and CSE 247 (can be taken concurrently)"
  },
  {
    "title": "Internet of Things",
    "code": "E81 CSE 222S",
    "description": "With the advent of the Internet of Things, we can address, control, and interconnect formerly isolated objects to create new and interesting applications. In this course we study fundamental technologies behind Internet-of-Things devices, and Appcessories, which include smart watches, health monitors, toys, and appliances. In addition to learning about IoT, students gain hands-on experience developing multi-platform solutions that control and communicate with Things using via mobile device friendly interfaces. Students apply their knowledge and skill to develop a project of their choosing using topics from the course.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=222S",
    "prerequisites": "CSE 132"
  },
  {
    "title": "Introduction to Parallel and Concurrent Programming",
    "code": "E81 CSE 231S",
    "description": "This course explores concepts, techniques, and design approaches for parallel and concurrent programming. We study how to write programs that make use of multiple processors for responsiveness and that share resources reliably and fairly. Parallel programming concepts include task-level, functional, and loop-level parallelism. Concurrent programming concepts include threads, synchronization, and locks. We cover how to adapt algorithms to achieve determinism and avoid data races and deadlock. Concepts and skills are acquired through the design and implementation of software projects.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=231S",
    "prerequisites": "CSE 131"
  },
  {
    "title": "Programming Skills Workshop",
    "code": "E81 CSE 232",
    "description": "This course provides an overview of practical implementation skills. Topics include compilation and linking, memory management, pointers and references, using code libraries, testing and debugging.",
    "units": 1,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=232",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Programming Tools and Techniques",
    "code": "E81 CSE 237S",
    "description": "This course offers an introduction to the tools and techniques that allow programmers to write code effectively. Tools covered include version control, the command line, debuggers, compilers, unit testing, IDEs, bug trackers, and more. The course also places a heavy emphasis on code quality: how can we write code that is functional and that also meets quality standards? Peer review exercises will be used to show the importance of code craftsmanship.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=237S",
    "prerequisites": "CSE 131"
  },
  {
    "title": "Logic and Discrete Mathematics",
    "code": "E81 CSE 240",
    "description": "Introduces elements of logic and discrete mathematics that allow reasoning about computational structures and processes. Generally, the areas of discrete structures, proof techniques, probability and computational models are covered. Topics typically include propositional and predicate logic; sets, relations, functions and graphs; direct and indirect proof methods, induction and recursion; finite state machines and regular languages.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=240",
    "prerequisites": "CSE 131 [COMMON EXAMS ON XXX] Note that this course will be held in-person"
  },
  {
    "title": "Data Structures and Algorithms",
    "code": "E81 CSE 247",
    "description": "Study of fundamental algorithms, data structures, and their effective use in a variety of applications. Emphasizes importance of data structure choice and implementation for obtaining the most efficient algorithm for solving a given problem. A key component of this course is worst-case asymptotic analysis, which provides a quick and simple method for determining the scalability and effectiveness of an algorithm. Online textbook purchase required.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=247",
    "prerequisites": "CSE 131/501N, and fluency with summations, derivatives, and proofs by induction"
  },
  {
    "title": "Seminar: Data Structures and Algorithms",
    "code": "E81 CSE 247R",
    "description": "The content of this seminar will vary by semester, but it will generally complement the material taught in CSE 247 Data Structures and Algorithms. Corequisite: CSE 247.",
    "units": 1,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=247R",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Human-Centered Design",
    "code": "E81 CSE 256A",
    "description": "This course provides an introduction to human-centered design through a series of small user interface development projects covering information foraging, learnability, and problem solving. Projects will begin with reviewing a relevant model of human behavior. Each project will then provide an opportunity to explore how to apply that model in the design of a new user interface.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=256A",
    "prerequisites": "CSE 131"
  },
  {
    "title": "Introduction to Digital Logic and Computer Design",
    "code": "E81 CSE 260M",
    "description": "Introduction to design methods for digital logic and fundamentals of computer architecture. Boolean algebra and logic minimization techniques; sources of delay in combinational circuits and effect on circuit performance; survey of common combinational circuit components; sequential circuit design and analysis; timing analysis of sequential circuits; use of computer-aided design tools for digital logic design (schematic capture, hardware description languages, simulation); design of simple processors and memory subsystems; program execution in simple processors; basic techniques for enhancing processor performance; configurable logic devices.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=260M",
    "prerequisites": "CSE 131"
  },
  {
    "title": "Introduction to Intelligent Agents Using Science Fiction",
    "code": "E81 CSE 311A",
    "description": "The course uses science-fiction short stories, TV episodes, and movies to motivate and introduce fundamental principles and techniques in intelligent agent systems. Topics covered may include game theory, decision theory, machine learning, distributed algorithms, and ethics.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=311A",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Data Manipulation and Management",
    "code": "E81 CSE 314A",
    "description": "As the base of data science, data needs to be acquired, integrated and preprocessed. This important step in the data science workflow ensures both quantity and quality of data and improves the effectiveness of the following steps of data processing. Students will gain an understanding of concepts and approaches of data acquisition and governance including data shaping, information extraction, information integration, data reduction and compression, data transformation as well as data cleaning. The course will further highlight the ethical responsibility of protecting the integrity of data and proper use of data.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=314A",
    "prerequisites": "CSE 131, CSE 217A; Corequisite: CSE 247"
  },
  {
    "title": "Social Network Analysis",
    "code": "E81 CSE 316A",
    "description": "This course looks at social networks and markets through the eyes of a computer scientist. We will look at questions including, \"Why are acquaintances rather than friends more likely to get us job opportunities?\" and, \"Why do the rich get richer?\" We begin by studying graph theory (allowing us to study the structure) and game theory (allowing us to study the interactions) of social networks and market behavior at the introductory level. Among other topics, we will study auctions, epidemics, and the structure of the Internet (including web searches). This course examines the intersection of computer science, economics, sociology, and applied mathematics.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=316A",
    "prerequisites": "CSE 240 and CSE 247"
  },
  {
    "title": "Rapid Prototype Development and Creative Programming",
    "code": "E81 CSE 330S",
    "description": "This course uses web development as a vehicle for developing skills in rapid prototyping. Students acquire the skills to build a Linux web server in Apache, to write a web site from scratch in PHP, to run an SQL database, to perform scripting in Python, to employ various web frameworks, and to develop modern web applications in client-side and server-side JavaScript. The course culminates with a creative project in which students are able to synthesize the course material into a project of their own interest. The course implements an interactive studio format: after a formal presentation of a topic, students develop a related project under the supervision of the instructor.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=330S",
    "prerequisites": "CSE 131 Revised: 2019-02-21"
  },
  {
    "title": "Object-Oriented Software Development Laboratory",
    "code": "E81 CSE 332S",
    "description": "Intensive focus on practical aspects of designing, implementing and debugging software, using object-oriented, procedural, and generic programming techniques. The course emphasizes familiarity and proficiency with a wide range of C++ language features through hands-on practice completing studio exercises and lab assignments, supplemented with readings and summary presentations for each session.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=332S",
    "prerequisites": "CSE 131 and CSE 247"
  },
  {
    "title": "Retro Game Design",
    "code": "E81 CSE 337A",
    "description": "Before they became \"retro,\" games played on platforms of the 1970s and 1980s were just games. But early game-console hardware was designed with very particular ideas of what made a game a game, and under extreme constraints of cost and technical viability. Creators designed for these constraints, and their work then influenced the design of later hardware and software. This is a course about the history, design, and technology of one retro game console, the 1977 Atari Video Computer System (also known as the Atari VCS or the Atari 2600). The first popular home console, the Atari VCS is a truly weird computer: It \"boasts\" 128 bytes of RAM, no video buffer, and a custom graphics and sound chip designed to interface with then-universal cathode ray tube televisions. Against all odds, creators made fun and successful games within these extreme constraints. Just as an artist benefits from learning the fundamentals of their craft, so a game designer or developer can benefit from returning to these early and crude hardware platforms. In this course, students will learn the technical and creative history of the Atari, and they will also learn the fundamentals of programming its unfamiliar hardware. Students will carry out programming exercises, mostly in the assembly language instructions required to operate this unusual computer. They will then make their own games for the Atari, which will be able to run on the actual, 45-year-old hardware.Same as L53 Film 337",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=337A",
    "prerequisites": ""
  },
  {
    "title": "Parallel and Sequential Algorithms",
    "code": "E81 CSE 341T",
    "description": "The course aims to teach students how to design, analyze and implement parallel algorithms. The emphasis is on teaching fundamental principles and design techniques that easily transfer over to parallel programming. These techniques include divide and conquer, contraction, the greedy method, and so on.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=341T",
    "prerequisites": "CSE 240, CSE 247, and Math 310"
  },
  {
    "title": "Analysis of Algorithms",
    "code": "E81 CSE 347",
    "description": "This course introduces techniques for the mathematical analysis of algorithms, including randomized algorithms and non-worst-case analyses such as amortized and competitive analysis. It also introduces the standard paradigms of divide-and-conquer, greedy, and dynamic programming algorithms, as well as reductions, and it provides an introduction to the study of intractability and techniques to determine when good algorithms cannot be designed.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=347",
    "prerequisites": "(CSE 240 or Math 310) and CSE 247"
  },
  {
    "title": "Analysis of Algorithms Recitation",
    "code": "E81 CSE 347R",
    "description": "This course is the recitation component of CSE 347. Registration and attendance for 347R is mandatory for students enrolled in 347.",
    "units": 0,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=347R",
    "prerequisites": ""
  },
  {
    "title": "Signals, Data and Equity",
    "code": "E81 CSE 359A",
    "description": "This course introduces the design of classification and estimation systems for equity -- that is, with the goal of reducing the inequities of racism, sexism, xenophobia, ableism, and other systems of oppression. Systems that change the allocation of resources among people can increase inequity due to their inputs, the systems themselves, or how the systems interact in the context in which they are deployed. This course presents background in power and oppression to help predict how new technological and societal systems might interact and when they might confront or reinforce existing power systems. Measurement theory -- the study of the mismatch between a system's intended measure and the data it actually uses -- is covered. Multiple examples of sensing and classification systems that operate on people (e.g., optical, audio, and text sensors) are covered by implementing algorithms and quantifying inequitable outputs.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=359A",
    "prerequisites": "ESE 105 or CSE 217A or CSE 417T. Background readings will be available.Same as E35 ESE 359"
  },
  {
    "title": "Introduction to Systems Software",
    "code": "E81 CSE 361S",
    "description": "This course is an introduction to the hardware and software foundations of computer processing systems. The course provides a programmer's perspective of how computer systems execute programs and store information. The course material aims to enable students to become more effective programmers, especially when dealing with issues of performance, portability and robustness. It also serves as a foundation for other system courses (e.g., those involving compilers, networks, and operating systems), where a deeper understanding of systems-level issues is required. Topics covered include machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, and supporting concurrent computation.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=361S",
    "prerequisites": "CSE 131 and CSE 132"
  },
  {
    "title": "Computer Architecture",
    "code": "E81 CSE 362M",
    "description": "This course explores the interaction and design philosophy of hardware and software for digital computer systems. Topics include: Processor architecture, Instruction Set Architecture, Assembly Language, memory hierarchy design, I/O considerations, and a comparison of computer architectures.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=362M",
    "prerequisites": "CSE 260M"
  },
  {
    "title": "Elements of Computing Systems",
    "code": "E81 CSE 365S",
    "description": "All computers are made up of 0s and 1s. However, the conceptual gap between the 0s and 1s and the day to day operation of modern computers is enormously wide. This fast-paced course aims to bridge the divide by starting with simple logic gates and building up the levels of abstraction until one can create games like Tetris. There is no specific programming language requirement, but some experience with programming is needed.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=365S",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Independent Study",
    "code": "E81 CSE 400",
    "description": "This course allows the student to investigate a topic in computer science and engineering of mutual interest to the student and a mentor. Interested students are encouraged to approach and engage faculty to develop a topic of interest. A form (https://wustl.box.com/s/gp2mffz8r7ql9rgsil5zfyz5pz05b8tb) declaring the agreement must be filed in the departmental office. This course carries university credit, but it does not count toward a CSE major or minor. To arrange for CSE major or minor credit for independent study, a student must enroll in CSE 400E instead of CSE 400. Consult also CSE 400E.",
    "units": 6,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=400",
    "prerequisites": ""
  },
  {
    "title": "Independent Study",
    "code": "E81 CSE 400E",
    "description": "Investigation of a topic in computer science and engineering of mutual interest to the student and a mentor. Interested students are encouraged to approach and engage faculty to develop a topic of interest. A form (https://wustl.box.com/s/gp2mffz8r7ql9rgsil5zfyz5pz05b8tb) declaring the agreement must be filed in the departmental office. Credit earned for CSE400E can be counted toward a student's major or minor program, with the consent of the student's advisor. See also: CSE400",
    "units": 6,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=400E",
    "prerequisites": ""
  },
  {
    "title": "AI and Society",
    "code": "E81 CSE 411A",
    "description": "AI has made increasing inroads in a broad array of applications, many that have socially significant implications. This course will study a number of such applications, focusing on issues such as AI used for social good, fairness and accountability of AI, and potential security implications of AI systems.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=411A",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Introduction to Artificial Intelligence",
    "code": "E81 CSE 412A",
    "description": "The discipline of artificial intelligence (AI) is concerned with building systems that think and act like humans or rationally on some absolute scale. This course is an introduction to the field, with special emphasis on sound modern methods. The topics include knowledge representation, problem solving via search, game playing, logical and probabilistic reasoning, planning, dynamic programming, and reinforcement learning. Programming exercises concretize the key methods. The course targets graduate students and advanced undergraduates. Evaluation is based on written and programming assignments, a midterm exam and a final exam.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=412A",
    "prerequisites": "CSE 247, ESE 326 ( or Math 3200 or Math 3211 or Engr 328), and Math 233. This course will be taught using Zoom and will be recorded"
  },
  {
    "title": "Web Privacy and Security",
    "code": "E81 CSE 413A",
    "description": "This course introduces the fundamental concepts of web privacy and security. It explores the challenges and techniques related to protecting personal privacy online and securing web applications from threats and vulnerabilities. Why take this course: Given that the vast majority of user-facing software is consumed through the web platform, developing an understanding of the web ecosystem is crucial in improving user privacy and security, overall. Topics include: Webpage execution (e.g., JavaScript execution), Browser security model (e.g., site isolation), Online tracking (e.g., cookies, fingerprinting), Privacy enhancing technologies (e.g., tracker blocking), Technology policy (privacy laws, policies). Prereqs: CSE 247",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=413A",
    "prerequisites": ""
  },
  {
    "title": "Data Science for Complex Networks",
    "code": "E81 CSE 416A",
    "description": "This course examines complex systems through the eyes of a computer scientist. We will use the representative power of graphs to model networks of social, technological, or biological interactions. Network analysis provides many computational, algorithmic, and modeling challenges. We begin by studying graph theory, allowing us to quantify the structure and interactions of social and other networks. We will then explore how to practically analyze network data and how to reason about it through mathematical models of network structure and evolution. We will also investigate algorithms that extract basic properties of networks in order to find communities and infer node properties. Finally, we will study a range of applications including robustness and fragility of networks such as the internet, spreading processes used to study epidemiology or viral marketing, and the ranking of webpages based on the structure of the webgraph. This course combines concepts from computer science and applied mathematics to study networked systems using data mining.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=416A",
    "prerequisites": "CSE 247, ESE 326, MATH 309, and programming experience (note: we will parse data and analyze networks using Python)"
  },
  {
    "title": "Introduction to Machine Learning",
    "code": "E81 CSE 417T",
    "description": "The field of machine learning is concerned with the question of how to construct computer programs that automatically improve with experience. This course is a broad introduction to machine learning, covering the foundations of supervised learning and important supervised learning algorithms. Topics to be covered are the theory of generalization (including VC-dimension, the bias-variance tradeoff, validation, and regularization) and linear and non-linear learning models (including linear and logistic regression, decision trees, ensemble methods, neural networks, nearest-neighbor methods, and support vector machines).",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=417T",
    "prerequisites": "CSE 247, ESE 326 ( or Engr 328) , Math 233, and Math 309 (can be taken concurrently)"
  },
  {
    "title": "Introduction to AI for Health",
    "code": "E81 CSE 419A",
    "description": "Artificial Intelligence (AI) has emerged as a powerful tool for solving complex health problems using advanced data-driven techniques. AI for health is fueled by both the advancement in AI methods and the increasing availability of health data. This course will introduce the interdisciplinary field of AI for health including applications of AI in various healthcare domains. Students will read and critique research papers and perform projects to develop AI models and solutions for health care.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=419A",
    "prerequisites": ""
  },
  {
    "title": "Operating Systems Organization",
    "code": "E81 CSE 422S",
    "description": "This course involves a hands-on exploration of core OS abstractions, mechanisms and policies in the context of the Linux kernel. Readings, lecture material, studio exercises, and lab assignments are closely integrated in an active-learning environment in which students gain experience and proficiency writing OS code, as well as tracing and evaluating OS operations via user-level programs and kernel-level monitoring tools. Topics include: system calls, interrupt handling, kernel modules, concurrency and synchronization, proportional and priority-based scheduling of processes and threads, I/O facilities, memory management, virtual memory, device management, and file system organization.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=422S",
    "prerequisites": "CSE 361S"
  },
  {
    "title": "Programming Systems and Languages",
    "code": "E81 CSE 425S",
    "description": "A systematic study of the principles, concepts and mechanisms of computer programming languages: their syntax, semantics and pragmatics; the processing and interpretation of computer programs; programming paradigms; and language design. Illustrative examples are selected from a variety of programming language paradigms.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=425S",
    "prerequisites": "CSE 332S"
  },
  {
    "title": "Cloud Computing with Big Data Applications",
    "code": "E81 CSE 427S",
    "description": "This course provides an overview of the tools necessary to harness big data on the cloud for real world analytic applications. Each lecture will cover an important cloud computing concept or framework, and will be accompanied by a lab. There will be an emphasis on hands-on experience through using each of the tools taught in this course in a small project. Topics include Cloud based security and storage, Linux, Docker and Kubernetes, Data modeling through JSON and SQL, Database concepts and storage architectures, distributed systems, and finally real-world applications. Labs will build on each other and require the completion of the previous week's lab. The course will end with a multi-week, open-ended final project.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=427S",
    "prerequisites": "CSE 131,CSE 247, and CSE 330"
  },
  {
    "title": "Multi-Paradigm Programming in C++",
    "code": "E81 CSE 428S",
    "description": "Intensive focus on how modern C++ language features support procedural, functional, generic, and object-oriented programming paradigms and allow those paradigms to be applied both separately and in combination. Topics covered will include various C++ language features and semantics, especially from the C++11 standard onward, with studio exercises and lab assignments designed to build proficiency in using them effectively within and across the different programming paradigms.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=428S",
    "prerequisites": "CSE 332S or CSE 504N; or graduate standing and basic proficiency in C++"
  },
  {
    "title": "Translation of Computer Languages",
    "code": "E81 CSE 431S",
    "description": "The theory of language recognition and translation is introduced in support of compiler construction for modern programming languages. Topics include syntactic and semantic analysis, symbol table management, code generation, and runtime libraries. A variety of parsing methods is covered, including top-down and bottom-up. Machine problems culminate in the course project, for which students construct a working compiler.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=431S",
    "prerequisites": "CSE 240 and CSE 247"
  },
  {
    "title": "Seminar: Capture The Flag (CTF) Studio",
    "code": "E81 CSE 433R",
    "description": "This course provides a collaborative studio space for hands-on practice solving security-relevant puzzles in \"Capture The Flag\" (CTF) format. Students will engage CTF challenges individually and in teams, and online CTF resources requiring (free) account signup may be used. Students will be encouraged to attempt challenges commensurate with their ability, but no prior CTF experience or security knowledge is assumed. The goal of the course is to build skills in the fundamentals of security analysis, including usage of the Linux command line and console-based security tools, creativity in applying theoretical knowledge to practical challenges, and confidence in approaching under-specified problems.",
    "units": 1,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=433R",
    "prerequisites": "corequisite: CSE 433S or equivalent"
  },
  {
    "title": "Introduction to Computer Security",
    "code": "E81 CSE 433S",
    "description": "Secure computing requires the secure design, implementation, and use of systems and algorithms across many areas of computer science. Fundamentals of secure computing such as trust models and cryptography will lay the groundwork for studying key topics in the security of systems, networking, web design, machine learning algorithms, mobile applications, and physical devices. Human factors, privacy, and the law will also be considered. Hands-on practice exploring vulnerabilities and defenses using Linux, C, and Python in studios and lab assignments is a key component of the course.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=433S",
    "prerequisites": "CSE 247 and either CSE 361 or CSE 332"
  },
  {
    "title": "Reverse Engineering and Malware Analysis",
    "code": "E81 CSE 434S",
    "description": "This course will focus on reverse engineering and malware analysis techniques. Reverse engineering -- the process of deconstructing an object to reveal its design and architecture -- is an essential skill in the information security community. Although hackers often use reverse engineering tools to discover and exploit vulnerabilities, security analysts and researchers must use reverse engineering techniques to find what a specific malware does, how it does it, and how it got into the system. In this course, we will explore reverse engineering techniques and tools, focusing on malware analysis. Students will use and write software during in-class studios and homework assignments to illustrate mastery of the material.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=434S",
    "prerequisites": "CSE 361S"
  },
  {
    "title": "Database Management Systems",
    "code": "E81 CSE 435S",
    "description": "A study of data models and the database management systems that support these data models. The design theory for databases is developed and various tools are utilized to apply the theory. General query languages are studied and techniques for query optimization are investigated. Integrity and security requirements are studied in the context of concurrent operations on a database, where the database may be distributed over one or more locations. The unique requirements for engineering design databases, image databases, and long transaction systems are analyzed.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=435S",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Technical Interviewing",
    "code": "E81 CSE 437R",
    "description": "Students will study, give, and receive technical interviews in this seminar course. The focus will be on improving student performance in a technical interview setting, with the goal of making our students as comfortable and agile as possible with technical interviews. Professionals from the local and extended Washington University community will mentor our students in this seminar.",
    "units": 2,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=437R",
    "prerequisites": ""
  },
  {
    "title": "Software Engineering Workshop",
    "code": "E81 CSE 437S",
    "description": "An introduction and exploration of concepts and issues related to large-scale software systems development. Areas of exploration include technical complexities, organization issues, and communication techniques for large-scale development. Students participate through teams emulating industrial development. The projects cover the principal system development life-cycle phases from requirements analysis, to software design, and to final implementation. Issues relating to real-time control systems, human factors, reliability, performance, operating costs, maintainability and others are addressed and resolved in a reasonable manner. Book Requirement: https://www.oreilly.com/library/view/kubernetes-up-and/9781492046523/.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=437S",
    "prerequisites": "Junior or Senior standing, and CSE 330S"
  },
  {
    "title": "Mobile Application Development",
    "code": "E81 CSE 438S",
    "description": "Learn how to create iOS apps in the Swift programming language. This course covers a variety of topics in the development of modern mobile applications, with a focus on hands-on projects. Students will create multiple fully-functional apps from scratch. The course emphasizes object-oriented design patterns and real-world development techniques. Time is provided at the end of the course for students to work on a project of their own interest.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=438S",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Mobile Application Development II",
    "code": "E81 CSE 439S",
    "description": "In this course, students will work in groups to design, develop, test, publish, and market an iOS mobile application. Throughout the semester, students will operate in different roles on a team, serving as lead developer, tester, and project manager. Topics include how to publish a mobile application on an app store, APIs and tools for testing and debugging, and popular cloud-based SDKs used by developers. This course requires completion of the iOS version of CSE 438 Mobile Application Development or the appropriate background knowledge of the iOS platform.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=439S",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Cryptography",
    "code": "E81 CSE 442T",
    "description": "This course is an introduction to modern cryptography, with an emphasis on its theoretical foundations. Topics will include one-way functions, pseudorandom generators, public key encryption, digital signatures, and zero-knowledge proofs.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=442T",
    "prerequisites": "CSE 240 and CSE 247"
  },
  {
    "title": "Introduction to Formal Languages and Automata",
    "code": "E81 CSE 447T",
    "description": "An introduction to the theory of computation, with emphasis on the relationship between formal models of computation and the computational problems solvable by those models. Specifically, this course covers finite automata and regular languages; Turing machines and computability; and basic measures of computational complexity and the corresponding complexity classes.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=447T",
    "prerequisites": "CSE 240 and CSE 247"
  },
  {
    "title": "Video Game Programming",
    "code": "E81 CSE 450A",
    "description": "This course teaches the core aspects of a video game developer's toolkit. Students work in groups and with a large game software engine to create and playtest a full-featured video game. Students will explore topics around the design of games through analysis of current games. Students have the opportunity to explore additional topics including graphics, artificial intelligence, networking, physics, and user interface design through their game project.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=450A",
    "prerequisites": "CSE247"
  },
  {
    "title": "Video Game Programming II",
    "code": "E81 CSE 451A",
    "description": "This course is a continuation of CSE 450A Video Game Programming I. Students will work in groups and with a large game software engine to make a full-featured video game. Students will have the opportunity to work on topics in graphics, artificial intelligence, networking, physics, user interface design, and other topics.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=451A",
    "prerequisites": "CSE 450A and permission of instructor"
  },
  {
    "title": "Computer Graphics",
    "code": "E81 CSE 452A",
    "description": "Introduction to computer graphics. The course covers fundamental concepts, data structures, and algorithms related to the construction, display, and manipulation of three-dimensional objects. Topics include scan-conversion, basic image processing, transformations, scene graphs, camera projections, local and global rendering, fractals, and parametric curves and surfaces. Students develop interactive graphics programs using C++ language.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=452A",
    "prerequisites": "CSE 332S and Math 309"
  },
  {
    "title": "Software Engineering for External Clients",
    "code": "E81 CSE 454A",
    "description": "Teams of students will design and develop a solution to a challenging problem posed by a real-world client. Students will gain experience with a variety of facets of software development, such as gathering and interpreting requirements, software design/architecture, UI/UX, testing, documentation, and developer/client interactions.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=454A",
    "prerequisites": "E81 CSE 330S or E81 CSE 332S and at least junior standing"
  },
  {
    "title": "Introduction to Visualization",
    "code": "E81 CSE 457A",
    "description": "Disciplines such as medicine, business, science, and government are producing enormous amounts of data with increasing volume and complexity. In this course, students will study the principles for transforming abstract data into useful information visualizations. They will learn about the state of the art in visualization research and development and gain hands-on experience with designing and developing interactive visualization tools for the web. They will also also learn how to critique existing visualizations and how to evaluate the systems they build. Topics include design, data mapping, visual perception, and interaction.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=457A",
    "prerequisites": "CSE 330S"
  },
  {
    "title": "Switching Theory",
    "code": "E81 CSE 460T",
    "description": "Advanced topics in switching theory as employed in the synthesis, analysis, and design of information processing systems. Combinational techniques: minimization, multiple output networks, state identification and fault detection, hazards, testability and design for test are examined. Sequential techniques: synchronous circuits, machine minimization, optimal state assignment, asynchronous circuits, and built-in self-test techniques.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=460T",
    "prerequisites": "CSE 260M"
  },
  {
    "title": "Computer Systems Design",
    "code": "E81 CSE 462M",
    "description": "Introduction to modern design practices, including FPGA and PCB design methodologies. Student teams use Xilinx Vivado for HDL-based FPGA design and simulation and do schematic capture, PCB layout, fabrication, and testing of the hardware portion of a selected computation system. The software portion of the project uses Microsoft Visual Studio to develop a user interface and any additional support software required to demonstrate final projects to the faculty during finals week.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=462M",
    "prerequisites": "CSE 361S and 362M from Washington University in St. Louis or permission of the instructor. Revised: 2019-02-22"
  },
  {
    "title": "Digital Integrated Circuit Design and Architecture",
    "code": "E81 CSE 463M",
    "description": "This is a project-oriented course on digital VLSI design. The course material focuses on bottom-up design of digital integrated circuits, starting from CMOS transistors, CMOS inverters, combinational circuits and sequential logic designs. Important design aspects of digital integrated circuits such as propagation delay, noise margins and power dissipation are covered in the class, and design challenges in sub-micron technology are addressed. The students design combinational and sequential circuits at various levels of abstraction using a state-of-the-art CAD environment provided by Cadence Design Systems. The goal of the course is to design a microprocessor in 0.5 micron technology that will be fabricated by a semiconductor foundry.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=463M",
    "prerequisites": "CSE 260M and ESE 232"
  },
  {
    "title": "Digital Systems Laboratory",
    "code": "E81 CSE 465M",
    "description": "Hardware/software co-design; processor interfacing; procedures for reliable digital design, both combinational and sequential; understanding manufacturers' specifications; use of test equipment. Several single-period laboratory exercises, several design projects, and application of microprocessors in digital design. One lecture and one laboratory period a week.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=465M",
    "prerequisites": "ESE 260Same as E35 ESE 465"
  },
  {
    "title": "Embedded Computing Systems",
    "code": "E81 CSE 467S",
    "description": "This course introduces the issues, challenges, and methods for designing embedded computing systems -- systems designed to serve a particular application and which incorporate the use of digital processing devices. Examples of embedded systems include cellular phones, appliances, game consoles, automobiles, and drones. Emphasis is given to aspects of design that are distinct to embedded systems. The course examines hardware, software, and system-level design. Hardware topics include microcontrollers, digital signal processors, memory hierarchy, and I/O. Software issues include languages, run-time environments, and program analysis. System-level topics include real-time operating systems, scheduling, power management, and wireless sensor networks. Students will perform a course project on a real embedded system testbed.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=467S",
    "prerequisites": "CSE 260M (and either CSE 132 or ESE 205)"
  },
  {
    "title": "Introduction to Quantum Computing",
    "code": "E81 CSE 468T",
    "description": "This course introduces students to quantum computing, which leverages the effects of quantum-mechanical phenomena to solve problems. The course begins with material from physics that demonstrates the presence of quantum effects. Mathematical abstractions of quantum gates are studied with the goal of developing the skill to reason about existing quantum circuits and to develop new quantum circuits as required to solve problems. Students will develop a quantum-computer simulator and make use of open simulators as well as actual devices that can realize quantum circuits on the Internet.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=468T",
    "prerequisites": "CSE247, Math 309 and Math 3200 ( or ESE 326 or Engr 328)"
  },
  {
    "title": "Security of the Internet of Things and Embedded System Security",
    "code": "E81 CSE 469S",
    "description": "This course presents a \"deep dive\" into the emerging world of the Internet of Things from a cybersecurity perspective. With billions of internet-enabled devices projected to impact every nook and cranny of modern existence, the concomitant security challenge portends to become dazzlingly complex. Students will learn the fundamentals of IoT architecture and operations from a layered perspective and focus on identifying, assessing, and mitigating the threats and vulnerabilities therein. Through a blend of lecture and \"hands-on\" studios, students will gain proficiency in the range of approaches, methods, and techniques required to address embedded systems security and secure the internet of things using actual devices from both hardware and software perspectives and across a range of applications.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=469S",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Computer Networks",
    "code": "E81 CSE 473S",
    "description": "A broad overview of computer networking. Topics include history, protocols, Hyper Text Transfer Protocol (HTTP), File Transfer Protocol (FTP), Simple Mail Transfer Protocol (SMTP), Domain Name System (DNS), peer-to-peer (P2P), transport layer design issues, transport layer protocols, Transmission Control Protocol (TCP), User Datagram Protocol (UDP), TCP congestion control, network layer, Internet Protocol version 4 (IPv4), Internet Control Message Protocol (ICMP), Internet Protocol version 6 (IPv6), routing algorithms, routing protocols, Open Shortest Path First (OSPF), Routing Information Protocol (RIP), Border Gateway Protocol (BGP), datalink layer and local area networks carrier sense multiple access with collision detection (CSMA/CD), Ethernet, virtual local area networks (VLANs), Point-to-Point Protocol (PPP), Multi-Protocol Label Switching, wireless and mobile networks, multimedia networking, security in computer networks, cryptography, and network management.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=473S",
    "prerequisites": "CSE 247; CSE 132 is suggested, but not required. Revised: 2019-02-22"
  },
  {
    "title": "Senior Project I",
    "code": "E81 CSE 497",
    "description": "Implementation of a substantive project on an individual basis, involving one or more major areas in computer science. Problems pursued under this framework may be predominantly analytical, involving exploration and extension of theoretical structures, or may pivot around the design/development of solutions for particular applications drawn from areas throughout the University and/or community. In either case, the project serves as a focal point for crystallizing the concepts, techniques, and methodologies encountered throughout the curriculum. Students intending to take CSE 497-498 must submit a project proposal form (https://cse.wustl.edu/undergraduate/PublishingImages/Pages/undergraduate-research/Independent%20Study%20Form%20400.pdf) for approval by the department during the spring semester of the junior year.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=497",
    "prerequisites": "senior standing"
  },
  {
    "title": "Senior Project II",
    "code": "E81 CSE 498",
    "description": "Implementation of a substantive project on an individual basis, involving one or more major areas in computer science. Problems pursued under this framework may be predominantly analytical, involving exploration and extension of theoretical structures, or may pivot around the design/development of solutions for particular applications drawn from areas throughout the University and/or community. In either case, the project serves as a focal point for crystallizing the concepts, techniques, and methodologies encountered throughout the curriculum. Students intending to take CSE 497-498 must submit a project proposal form (https://cse.wustl.edu/undergraduate/PublishingImages/Pages/undergraduate-research/Independent%20Study%20Form%20400.pdf) for approval by the department during the spring semester of the junior year.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=498",
    "prerequisites": "senior standing"
  },
  {
    "title": "Undergraduate Honors Thesis",
    "code": "E81 CSE 499",
    "description": "Working closely with a faculty member, the student investigates an original idea (algorithm, model technique, etc.), including a study of its possible implications, its potential application, and its relationship to previous related work reported in the literature. Contributions and results from this investigation are synthesized and compiled into a publication-quality research paper presenting the new idea.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=499",
    "prerequisites": "a strong academic record and permission of instructor"
  },
  {
    "title": "Independent Study",
    "code": "E81 CSE 500",
    "description": "Proposal form can be located at https://cse.wustl.edu/undergraduate/PublishingImages/Pages/undergraduate-research/Independent%20Study%20Form%20400.pdf",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=500",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Computer Science",
    "code": "E81 CSE 501N",
    "description": "An introduction to software concepts and implementation, emphasizing problem solving through abstraction and decomposition. Introduces processes and algorithms, procedural abstraction, data abstraction, encapsulation, and object-oriented programming. Recursion, iteration, and simple data structures are covered. Concepts and skills are mastered through programming projects, many of which employ graphics to enhance conceptual understanding. Java, an object-oriented programming language, is the vehicle of exploration. Active-learning sessions are conducted in a studio setting in which students interact with each other and the professor to solve problems collaboratively.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=501N",
    "prerequisites": "Comfort with algebra and geometry at the high school level is assumed. Patience, good planning, and organization will promote success. This course assumes no prior experience with programming.Same as E81 CSE 131"
  },
  {
    "title": "Data Structures and Algorithms",
    "code": "E81 CSE 502N",
    "description": "Study of fundamental algorithms, data structures, and their effective use in a variety of applications. Emphasizes importance of data structure choice and implementation for obtaining the most efficient algorithm for solving a given problem. A key component of this course is worst-case asymptotic analysis, which provides a quick and simple method for determining the scalability and effectiveness of an algorithm. Online textbook purchase required.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=502N",
    "prerequisites": "CSE 131/501N, and fluency with summations, derivatives, and proofs by induction.Same as E81 CSE 247"
  },
  {
    "title": "Rapid Prototype Development and Creative Programming",
    "code": "E81 CSE 503S",
    "description": "This course uses web development as a vehicle for developing skills in rapid prototyping. Students acquire the skills to build a Linux web server in Apache, to write a web site from scratch in PHP, to run an SQL database, to perform scripting in Python, to employ various web frameworks, and to develop modern web applications in client-side and server-side JavaScript. The course culminates with a creative project in which students are able to synthesize the course material into a project of their own interest. The course implements an interactive studio format: after a formal presentation of a topic, students develop a related project under the supervision of the instructor.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=503S",
    "prerequisites": "CSE 131 Revised: 2019-02-21Same as E81 CSE 330S"
  },
  {
    "title": "Object-Oriented Software Development Laboratory",
    "code": "E81 CSE 504N",
    "description": "Intensive focus on practical aspects of designing, implementing and debugging software, using object-oriented, procedural, and generic programming techniques. The course emphasizes familiarity and proficiency with a wide range of C++ language features through hands-on practice completing studio exercises and lab assignments, supplemented with readings and summary presentations for each session.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=504N",
    "prerequisites": "CSE 131 and CSE 247Same as E81 CSE 332S"
  },
  {
    "title": "Introduction to Digital Logic and Computer Design",
    "code": "E81 CSE 505N",
    "description": "Introduction to design methods for digital logic and fundamentals of computer architecture. Boolean algebra and logic minimization techniques; sources of delay in combinational circuits and effect on circuit performance; survey of common combinational circuit components; sequential circuit design and analysis; timing analysis of sequential circuits; use of computer-aided design tools for digital logic design (schematic capture, hardware description languages, simulation); design of simple processors and memory subsystems; program execution in simple processors; basic techniques for enhancing processor performance; configurable logic devices.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=505N",
    "prerequisites": "CSE 131Same as E81 CSE 260M"
  },
  {
    "title": "Deep Reinforcement Learning",
    "code": "E81 CSE 510A",
    "description": "Deep Reinforcement Learning (RL) is a cutting-edge field at the intersection of artificial intelligence and decision-making. This course provides an in-depth exploration of the fundamental principles, algorithms, and applications of deep reinforcement learning. It covers basic algorithms, including value-based, policy-based, actor-critic, and model-based methods, as well as advanced topics, such as meta RL, offline RL, and multi-agent RL. By combining deep learning techniques with reinforcement learning, this course equips students with the necessary skills to build intelligent systems that can learn from experiences and make optimal decisions in complex environments. Evaluation of this course is based on written and programming assignments, and a final course project.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=510A",
    "prerequisites": ""
  },
  {
    "title": "Introduction to Artificial Intelligence",
    "code": "E81 CSE 511A",
    "description": "The discipline of artificial intelligence (AI) is concerned with building systems that think and act like humans or rationally on some absolute scale. This course is an introduction to the field, with special emphasis on sound modern methods. The topics include knowledge representation, problem solving via search, game playing, logical and probabilistic reasoning, planning, dynamic programming, and reinforcement learning. Programming exercises concretize the key methods. The course targets graduate students and advanced undergraduates. Evaluation is based on written and programming assignments, a midterm exam and a final exam.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=511A",
    "prerequisites": "CSE 247, ESE 326, Math 233"
  },
  {
    "title": "Theory of Artificial Intelligence and Machine Learning",
    "code": "E81 CSE 513T",
    "description": "Mathematical foundations for Artificial Intelligence and Machine Learning. An introduction to the PAC-Semantics (\"Probably Approximately Correct\") as a common semantics for knowledge obtained from learning and declarative sources, and the computational problems underlying the acquisition and processing of such knowledge. We emphasize the design and analysis of efficient algorithms for these problems, and examine for which representations these problems are known or believed to be tractable.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=513T",
    "prerequisites": "CSE 347"
  },
  {
    "title": "Data Mining",
    "code": "E81 CSE 514A",
    "description": "With the vast advancements in science and technology, the acquisition of large quantities of data is routinely performed in many fields. Examples of large data include various types of data on the internet, high-throughput sequencing data in biology and medicine, extraterrestrial data from telescopes in astronomy, and images from surveillance cameras in security settings. Analyzing a large amount of data through data mining has become an effective means of extracting knowledge from data. This course introduces the basic concepts and methods of data mining and provides hands-on experience for processing, analyzing and modeling structured and unstructured data. Homework problems, exams, and programming assignments will be administrated throughout the course to enhance students' learning.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=514A",
    "prerequisites": "CSE 247, ESE 326 (or Math 3200 or Engr 328), and Math 233"
  },
  {
    "title": "Bayesian Methods in Machine Learning",
    "code": "E81 CSE 515T",
    "description": "This course will cover machine learning from a Bayesian probabilistic perspective. Bayesian probability allows us to model and reason about all types of uncertainty. The result is a powerful, consistent framework for approaching many problems that arise in machine learning, including parameter estimation, model comparison, and decision making. We will begin with a high-level introduction to Bayesian inference and then proceed to cover more advanced topics. These will include inference techniques (e.g., exact, MAP, sampling methods, the Laplace approximation), Bayesian decision theory, Bayesian model comparison, Bayesian nonparametrics, and Bayesian optimization.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=515T",
    "prerequisites": "CSE 417T and ESE 326"
  },
  {
    "title": "Multi-Agent Systems",
    "code": "E81 CSE 516A",
    "description": "This course introduces the fundamental techniques and concepts needed to study multi-agent systems, in which multiple autonomous entities with different information sets and goals interact. We will study algorithmic, mathematical, and game-theoretic foundations, and how these foundations can help us understand and design systems ranging from robot teams to online markets to social computing platforms. Topics covered may include game theory, distributed optimization, multi-agent learning and decision-making, preference elicitation and aggregation, mechanism design, and incentives in social computing systems.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=516A",
    "prerequisites": "CSE 347 (may be taken concurrently), ESE 326 (or Math 3200), and Math 233 or equivalents. Some prior exposure to artificial intelligence, machine learning, game theory, and microeconomics may be helpful, but is not required"
  },
  {
    "title": "Machine Learning",
    "code": "E81 CSE 517A",
    "description": "This course is the second course of a two course sequence on machine learning (CSE 417T and CSE517A). It assumes a fundamental understanding of the machine learning foundations (both theoretical and practical) and introduces probabilistic machine learning approaches in-depth as well as advanced topics at the frontier of the field. Topics to be covered include discriminative and generative probabilistic models, kernel methods (e.g., support vector machines, Gaussian processes), neural networks (deep learning), unsupervised learning techniques, and practical machine learning (e.g., feature enginieering, dimensionality reduction, model comparison).",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=517A",
    "prerequisites": "Math 233, CSE 247, ESE 326 or Math 3211, Math 309, and CSE 417T or ESE 417"
  },
  {
    "title": "Human-in-the-Loop Computation",
    "code": "E81 CSE 518A",
    "description": "This course is an exploration of the opportunities and challenges of human-in-the-loop computation, an emerging field that examines how humans and computers can work together to solve problems neither can solve alone yet. We will explore ways in which techniques from machine learning, game theory, optimization, online behavioral social science, and human-computer interactions can be used to model and analyze human-in-the-loop systems such as crowdsourcing markets, prediction markets, and user-generated content platforms. We will also look into recent developments in the interactions between humans and AIs, such as learning with the presence of strategic behavior and ethical issues in AI systems.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=518A",
    "prerequisites": "CSE 247, ESE 326, Math 233, and Math 309"
  },
  {
    "title": "Advanced Machine Learning",
    "code": "E81 CSE 519T",
    "description": "This course provides a close look at advanced machine learning algorithms, including their theoretical guarantees (computational learning theory) and tricks to make them work in practice. In addition, this course focuses on more specialized learning settings, including unsupervised learning, semi-supervised learning, domain adaptation, multi-task learning, structured prediction, metric learning, and learning of data representations. Learning approaches may include graphical models, non-parametric Bayesian statistics, and technical topics such as sampling, approximate inference, and non-linear function optimization. Mathematical maturity and general familiarity with machine learning are required.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=519T",
    "prerequisites": "CSE 517A"
  },
  {
    "title": "Real-Time Systems",
    "code": "E81 CSE 520S",
    "description": "This course covers software systems and network technologies for real-time applications such as automobiles, avionics, industrial automation, and the Internet of Things. Topics include real-time scheduling, real-time operating systems and middleware, quality of service, industrial networks, and real-time cloud computing.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=520S",
    "prerequisites": "CSE 361S"
  },
  {
    "title": "Wireless Sensor Networks",
    "code": "E81 CSE 521S",
    "description": "Dense collections of smart sensors networked to form self-configuring pervasive computing systems provide a basis for a new computing paradigm that challenges many classical approaches to distributed computing. Naming, wireless networking protocols, data management, and approaches to dependability, real-time, security, and middleware services all fundamentally change when confronted with this new environment. Embedded sensor networks and pervasive computing are among the most exciting research areas with many open research questions. This course will study a large number of research papers that deal with various aspects of wireless sensor networks. Students will perform a project on a real wireless sensor network comprised of tiny devices, each consisting of sensors, a radio transceiver, and a microcontroller.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=521S",
    "prerequisites": "CSE 361S"
  },
  {
    "title": "Advanced Operating Systems",
    "code": "E81 CSE 522S",
    "description": "This course offers an in-depth hands-on exploration of advanced uses of key OS abstractions, mechanisms and policies, with an increasing focus on understanding and evaluating their behaviors and interactions. Readings, lecture material, studio exercises, and a semester-long project chosen by students are closely integrated in an active-learning environment in which students gain experience and proficiency writing, tracing, and evaluating user-space and kernel-space code. Topics include how memory, processes and threads, virtual file systems, and other mechanisms can be used by hypervisors, containers, and other advanced OS abstractions, as well as forensic techniques for examining and managing system behavior.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=522S",
    "prerequisites": "CSE 422S"
  },
  {
    "title": "Systems Security",
    "code": "E81 CSE 523S",
    "description": "This course examines the intersection between computer design and information security. While performance and efficiency in digital systems have improved markedly in recent decades, computer security has worsened overall in this time frame. To understand why, we will explore the role that design choices play in the security characteristics of modern computer and network systems. Students will use and write software to illustrate mastery of the material. Projects will include identifying security vulnerabilities, exploiting vulnerabilities, and detecting and defending against exploits.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=523S",
    "prerequisites": "CSE 361S"
  },
  {
    "title": "Computation in Economics and Social Choice",
    "code": "E81 CSE 525T",
    "description": "This course covers the mathematical and algorithmic foundations of problems of reconciling agent preferences. By specifying the kinds of agents, alternatives, and objectives, this captures algorithm design problems as diverse as how to sell goods to buyers, how to match medical residents to hospitals, and how to elect representatives to legislatures. Topics include algorithm and mechanism design for the allocation of private goods; choosing public goods and shared alternatives; and participatory budgeting.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=525T",
    "prerequisites": "CSE 347, and CSE 541T or CSE 581T (concentration inequalities, NP-hardness, linear programming)"
  },
  {
    "title": "Natural Language Processing",
    "code": "E81 CSE 527A",
    "description": "Natural language processing (NLP) is an important part of artificial intelligence (AI), endowing computers with the ability to process human language. NLP techniques are used in applications such as question answering, automatic language translation, and extracting structured information from text. This course will introduce fundamental ideas and recent research trends in NLP. Students will gain theoretical and practical experience with various NLP techniques (e.g., deep learning) and applications. Pre-reqs: basic linear algebra, basic probability and statistics, basic machine learning (CSE 417T or ESE 417 or instructor consent) and Python programming.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=527A",
    "prerequisites": ""
  },
  {
    "title": "Data-driven Privacy and Security",
    "code": "E81 CSE 527S",
    "description": "It is becoming increasingly hard for users to use the internet while keeping their privacy and security intact. It is a routine practice for online services to surreptitiously collect excessive amounts of user data, use user data for undisclosed purposes, and even engage in blatant trading of user data. This research-oriented course takes a deep-dive into surfacing data collection by online services and its harms to users, exploring solutions that aim to mitigate these harms, investigating emerging threats that still need to be addressed, and reviewing new directions to systematically improve the state of user privacy and security on the internet. Major topics: Web privacy and security, IoT privacy and security, Large language model (LLM) security and privacy, and Technology policy.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=527S",
    "prerequisites": ""
  },
  {
    "title": "AI for Health",
    "code": "E81 CSE 531A",
    "description": "Artificial Intelligence (AI) has emerged as a powerful tool for solving complex health problems using advanced data-driven techniques. AI for health is fueled by both the advancement in AI methods and the availability of health data provided by electronic health records (EHR) and wearables. This course will cover recent literature in the interdisciplinary field of AI for health. Students will read and critique research papers and perform a project on AI for health.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=531A",
    "prerequisites": ""
  },
  {
    "title": "Advanced Multiparadigm Software Development",
    "code": "E81 CSE 532S",
    "description": "Intensive focus on advanced design and implementation of concurrent and distributed system software in C++. Topics covered include concurrency and synchronization features and software architecture patterns.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=532S",
    "prerequisites": "CSE 332S or graduate standing and strong familiarity with C++; and CSE 422S"
  },
  {
    "title": "Coding and Information Theory for Data Science",
    "code": "E81 CSE 533T",
    "description": "Coding/information theory emerged in mid 20'th century as a mathematical theory of communication with noise. In latter decades it has developed to a vast topic encompassing most aspects of handling large datasets. The course will begin by surveying the classical mathematical theory and its basic applications in communication, and continue to contemporary applications in storage, computation, privacy, machine learning, and emerging technologies such as networks, blockchains, and DNA storage. The course is self-contained, but prior knowledge in algebra (such as Math 309 or ESE 318), discrete math (such as CSE 240 or Math 310), and probability (such as Math 2200 or ESE 326), as well as some mathematical maturity, is assumed. There will be 4-5 homework assignments, one in-person midterm, and a final reading assignment.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=533T",
    "prerequisites": ""
  },
  {
    "title": "Large-Scale Optimization for Data Science",
    "code": "E81 CSE 534A",
    "description": "Large-scale optimization is an essential component of modern data science, artificial intelligence, and machine learning. This graduate-level course rigorously introduces optimization methods that are suitable for large-scale problems arising in these areas. Students will learn several algorithms suitable for both smooth and nonsmooth optimization, including gradient methods, proximal methods, mirror descent, Nesterov's acceleration, ADMM, quasi-Newton methods, stochastic optimization, variance reduction, and distributed optimization. Throughout the course, we will discuss the efficacy of these methods in concrete data science problems, under appropriate statistical models. Students will be required to program in Python or MATLAB.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=534A",
    "prerequisites": "CSE 247, Math 309, (Math 3200 or ESE 326), ESE 415.Same as E35 ESE 513"
  },
  {
    "title": "Trustworthy Autonomy",
    "code": "E81 CSE 537T",
    "description": "Cyber-physical systems are becoming increasingly capable. These are systems consisting of digital and physical components. They are deployed to increase autonomy in critical settings where failure is costly, such as driving, aviation, medicine, and manufacturing. This course covers several approaches for assuring that such systems meet their specifications. We will discuss: (1) how to mathematically model these systems and their specifications, (2) how to formally verify and synthesize models which meet their specifications, and (3) how to address the challenges resulting from incorporating machine-learned components, such as neural networks, as perception and control components in these systems.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=537T",
    "prerequisites": "CSE240 and CSE247, or approval of instructor. Preferred prerequisites: Math 217, CSE 347, CSE 417T or ESE 417"
  },
  {
    "title": "Modeling and Performance Evaluation of Computer Systems",
    "code": "E81 CSE 538T",
    "description": "Modern computing systems consist of multiple interconnected components that all influence performance. The focus of this course is on developing modeling tools aimed at understanding how to design and provision such systems to meet certain performance or efficiency targets and the trade-offs involved. The course covers Markov chains and their applications to simple queues, and it proceeds to explore more complex systems, including server farms and how to optimize their performance through scheduling and task assignment policies. The course includes a brief review of the necessary probability and mathematical concepts.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=538T",
    "prerequisites": "ESE 326"
  },
  {
    "title": "Concepts in Multicore Computing",
    "code": "E81 CSE 539S",
    "description": "Nowadays, the vast majority of computer systems are built using multicore processor chips. This fundamental shift in hardware design impacts all areas of computer science - one must write parallel programs in order to unlock the computational power provided by modern hardware. The goal of this course is to study concepts in multicore computing. We will examine the implications of the multicore hardware design, discuss challenges in writing high performance software, and study emerging technologies relevant to developing software for multicore systems. Topics include memory hierarchy, cache coherence protocol, memory models, scheduling, high-level parallel language models, concurrent programming (synchronization and concurrent data structures), algorithms for debugging parallel software, and performance analysis.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=539S",
    "prerequisites": "CSE 247 and CSE 361S"
  },
  {
    "title": "Advanced Algorithms",
    "code": "E81 CSE 541T",
    "description": "Provides a broad coverage of fundamental algorithm design techniques with the focus on developing efficient algorithms for solving combinatorial and optimization problems. The topics covered include: review of greedy algorithms, dynamic programming, NP-completeness, approximation algorithms, use of linear and convex programming for approximation, and on-line algorithms. Throughout this course there is an emphasis on correctness proofs and the ability to apply the techniques taught to design efficient algorithms for problems from a wide variety of application areas.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=541T",
    "prerequisites": "CSE 347 Revised: 2019-02-21"
  },
  {
    "title": "Concurrency and Memory Safe System Software Development",
    "code": "E81 CSE 542S",
    "description": "As multi-core processors and multi-threaded programming are ever more prevalent in modern computing systems, ensuring correctness of programs depends strongly on avoiding hazards that may arise from concurrency and memory management semantics in those contexts. This course focuses on the memory safety and concurrency safety models in Rust, with an emphasis on the language's syntax and semantics related to those models, both separately and in combination, as well as a general coverage of the language as a whole. Lectures and assigned readings will be augmented with studio exercises and laboratory assignments in which key language features will be explored and applied hands-on.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=542S",
    "prerequisites": "CSE 422S; or graduate standing and prior experience with concurrency, synchronization, and memory management"
  },
  {
    "title": "Advanced Secure Software Engineering",
    "code": "E81 CSE 543S",
    "description": "The aim of this course is to provide students with broader and deeper knowledge as well as hands-on experience in understanding security techniques and methods needed in software development. Students complete an independent research project which will involve synthesizing multiple software security techniques and applying them to an actual software program or system.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=543S",
    "prerequisites": ""
  },
  {
    "title": "Algorithms for Nonlinear Optimization",
    "code": "E81 CSE 543T",
    "description": "The course will provide an in-depth coverage of modern algorithms for the numerical solution of multidimensional optimization problems. Unconstrained optimization techniques including Gradient methods, Newton's methods, Quasi-Newton methods, and conjugate methods will be introduced. The emphasis is on constrained optimization techniques: Lagrange theory, Lagrangian methods, penalty methods, sequential quadratic programming, primal-dual methods, duality theory, nondifferentiable dual methods, and decomposition methods. The course will also discuss applications in engineering systems and use of state-of-the-art computer codes. Special topics may include large-scale systems, parallel optimization, and convex optimization.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=543T",
    "prerequisites": "Calculus I and Math 309"
  },
  {
    "title": "Special Topics in Application",
    "code": "E81 CSE 544A",
    "description": "The material for this course varies among offerings, but this course generally covers advanced or specialized topics in computer application.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=544A",
    "prerequisites": ""
  },
  {
    "title": "Special Topics in Machines",
    "code": "E81 CSE 544M",
    "description": "The material for this course varies among offerings, but this course generally covers advanced or specialized topics in computer science machines.",
    "units": 0,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=544M",
    "prerequisites": ""
  },
  {
    "title": "Special Topics in Systems",
    "code": "E81 CSE 544S",
    "description": "The material for this course varies among offerings, but this course generally covers advanced or specialized topics in computer science systems.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=544S",
    "prerequisites": ""
  },
  {
    "title": "Special Topics in Computer Science Theory",
    "code": "E81 CSE 544T",
    "description": "The material for this course varies among offerings, but this course generally covers advanced or specialized topics in computer science theory.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=544T",
    "prerequisites": ""
  },
  {
    "title": "Computational Geometry",
    "code": "E81 CSE 546T",
    "description": "Computational geometry is the algorithmic study of problems that involve geometric shapes such as points, lines, and polygons. Such problems appear in computer graphics, vision, robotics, animation, visualization, molecular biology, and geographic information systems. This course covers data structures that are unique to geometric computing, such as convex hull, Voronoi diagram, Delaunay triangulation, arrangement, range searching, KD-trees, and segment trees. Also covered are algorithms for polygon triangulation, path planning, and the art gallery problem.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=546T",
    "prerequisites": "CSE 347"
  },
  {
    "title": "Theory of Parallel Systems",
    "code": "E81 CSE 549T",
    "description": "The course covers various aspects of parallel programming such as algorithms, schedulers and systems from a theoretical perspective. We will cover both classic and recent results in parallel computing. Topics include parallel algorithms and analysis in the work/span model, scheduling algorithms, external memory algorithms and their analysis, cache-coherence protocols etc. The focus will be on design and analysis.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=549T",
    "prerequisites": "CSE 247"
  },
  {
    "title": "Geometric Computing for Biomedicine",
    "code": "E81 CSE 554A",
    "description": "With the advance of imaging technologies deployed in medicine, engineering and science, there is a rapidly increasing amount of spatial data sets (e.g., images, volumes, point clouds) that need to be processed, visualized, and analyzed. This course will focus on a number of geometry-related computing problems that are essential in the knowledge discovery process in various spatial-data-driven biomedical applications. These problems include visualization, segmentation, mesh construction and processing, and shape representation and analysis. This course consists of lectures that cover theories and algorithms, and it includes a series of hands-on programming projects using real-world data collected by various imaging techniques (e.g., CT, MRI, electron cryomicroscopy).",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=554A",
    "prerequisites": "CSE 332 (or proficiency in programming in C++ or Java or Python) and CSE 247"
  },
  {
    "title": "Computational Photography",
    "code": "E81 CSE 555A",
    "description": "Computational Photography describes the convergence of computer graphics, computer vision, and the Internet with photography. Its goal is to overcome the limitations of traditional photography using computational techniques to enhance the way we capture, manipulate, and interact with visual media. In this course we will study many interesting, recent image based algorithms and implement them to the degree that is possible. Topics may include: cameras and image formation, human visual perception, image processing (filtering, pyramids), image blending and compositing, image retargeting, texture synthesis and transfer, image completion / inpainting, super-resolution, deblurring, denoising, image based lighting and rendering, high dynamic range, depth and defocus, flash / no flash photography, coded aperture photography, single / multi view reconstruction, photo quality assessment, non photorealistic rendering, modeling and synthesis using Internet data, and others. Pre-requisites: CSE 452A, CSE 554A, or CSE 559A",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=555A",
    "prerequisites": ""
  },
  {
    "title": "Adversarial AI",
    "code": "E81 CSE 555T",
    "description": "This course will introduce students to concepts, theoretical foundations, and applications of adversarial reasoning in Artificial Intelligence. Topics will include the use of machine learning in adversarial settings, such as security, common attacks on machine learning models and algorithms, foundations of game theoretic modeling and analysis in security, with a special focus on algorithmic approaches, and foundations of adversarial social choice, with a focus on vulnerability analysis of elections.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=555T",
    "prerequisites": "CSE417T"
  },
  {
    "title": "Human-Computer Interaction Methods",
    "code": "E81 CSE 556A",
    "description": "An introduction to user centered design processes. The course covers a variety of HCI techniques for use at different stages in the software development cycle, including techniques that can be used with and without users. Students will gain experience using these techniques through in-class exercises and then apply them in greater depth through a semester long interface development project. Students who enroll in this course are expected to be comfortable with building user interfaces in at least one framework and be willing to learn whatever framework is most appropriate for their project. Over the course of the semester, students will be expected to present their interface evaluation results through written reports and in class presentations.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=556A",
    "prerequisites": "3xxS or 4xxS"
  },
  {
    "title": "Advanced Visualization",
    "code": "E81 CSE 557A",
    "description": "We are in an era where it is possible to have all of the world's information at our fingertips. However, the more information we can access, the more difficult it is to obtain a holistic view of the data or to determine what's important to make decisions. Computer-based visualization systems provide the opportunity to represent large or complex data visually to aid comprehension and cognition. In this course, we learn about the state of the art in visualization research and gain hands-on experience with the research pipeline. We also learn how to critique existing work and how to formulate and explore sound research questions. We will cover advanced visualization topics including user modeling, adaptation, personalization, perception, and visual analytics for non-experts.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=557A",
    "prerequisites": "CSE 457A or permission of instructor"
  },
  {
    "title": "Computer Vision",
    "code": "E81 CSE 559A",
    "description": "This course introduces the fundamentals of designing computational systems that can \"look at\" images and reason about the physical objects and scenes they represent. Topics include the estimation of color, shape, geometry, and motion from images; image classification, segmentation, and object detection; and image restoration, enhancement, and synthesis. The focus of this course will be on mathematical foundations and practical algorithmic approaches, including: the physics and geometry of image formation; robust methods for estimating image motion and geometry; and deep-learning approaches for semantic image understanding. Students will be required to program in Python.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=559A",
    "prerequisites": "Any of: CSE 417T (ML), ESE417 (ML), CSE514A (Data Mining), CSE517A (ML)"
  },
  {
    "title": "Computer Systems Architecture I",
    "code": "E81 CSE 560M",
    "description": "An exploration of the central issues in computer architecture: instruction set design, addressing and register set design, control unit design, memory hierarchies (cache and main memories, virtual memory), pipelining, instruction scheduling, and parallel systems. The course emphasizes understanding the performance implications of design choices, using architecture modeling and evaluation using simulation techniques.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=560M",
    "prerequisites": "CSE 361S and CSE 260M"
  },
  {
    "title": "Large Language Models",
    "code": "E81 CSE 561A",
    "description": "Large Language Models (LLMs) have revolutionized the field of artificial intelligence, offering unprecedented capabilities in understanding and generating human-like text. This is a research-oriented course that explores the capabilities and challenges of LLMs. Students will gain a comprehensive understanding of the underlying mechanisms that power these models, as well as reading frontier papers and working on projects to gain hands-on experience. Topics to be covered include LLM training, LLM capabilities, safety, ethical considerations, approaches to augment LLMs, efficiency of modeling and training LLMs, etc. Pre-reqs: basic understanding of machine learning (CSE 417 or ESE 417)",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=561A",
    "prerequisites": ""
  },
  {
    "title": "Digital Integrated Circuit Design and Architecture",
    "code": "E81 CSE 563M",
    "description": "This is a project-oriented course on digital VLSI design. The course material focuses on bottom-up design of digital integrated circuits, starting from CMOS transistors, CMOS inverters, combinational circuits and sequential logic designs. Important design aspects of digital integrated circuits such as propagation delay, noise margins and power dissipation are covered in the class, and design challenges in sub-micron technology are addressed. The students design combinational and sequential circuits at various levels of abstraction using a state-of-the-art CAD environment provided by Cadence Design Systems. The goal of the course is to design a microprocessor in 0.5 micron technology that will be fabricated by a semiconductor foundry.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=563M",
    "prerequisites": "CSE 260M and ESE 232.Same as E81 CSE 463M"
  },
  {
    "title": "High Performance Computer Systems",
    "code": "E81 CSE 566S",
    "description": "Many applications make substantial performance demands upon the computer systems upon which those applications are deployed. In this context, performance is frequently multidimensional, including resource efficiency, power, execution speed (which can be quantified via elapsed run time, data throughput, or latency), etc. Modern computing platforms exploit parallelism and architectural diversity (e.g., co-processors such as graphics engines and/or reconfigurable logic) to achieve the desired performance goals. This course addresses the practical aspects of achieving high performance on modern computing platforms. This includes questions ranging from how the computing platform is designed to how are applications and algorithms expressed to exploit the platform's properties. Particular attention is given to the role of application development tools.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=566S",
    "prerequisites": "Familiarity with software development in Linux preferred, graduate standing or permission of instructor"
  },
  {
    "title": "Computer Systems Analysis",
    "code": "E81 CSE 567M",
    "description": "A comprehensive course on performance analysis techniques. The topics include common mistakes, selection of techniques and metrics, summarizing measured data, comparing systems using random data, simple linear regression models, other regression models, experimental designs, 2**k experimental designs, factorial designs with replication, fractional factorial designs, one factor experiments, two factor full factorial design w/o replications, two factor full factorial designs with replications, general full factorial designs, introduction to queueing theory, analysis of single queues, queueing networks, operational laws, mean-value analysis, time series analysis, heavy tailed distributions, self-similar processes, long-range dependence, random number generation, analysis of simulation results, and art of data presentation.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=567M",
    "prerequisites": "CSE 260M"
  },
  {
    "title": "Recent Advances in Computer Security and Privacy",
    "code": "E81 CSE 569S",
    "description": "The aim of this course is to provide students with knowledge and hands-on experience in understanding the security techniques and methods needed for IoT, real-time, and embedded systems. Students complete an independent research project which will involve synthesizing multiple security techniques and applying them to an actual IoT, real-time, or embedded system or device.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=569S",
    "prerequisites": ""
  },
  {
    "title": "Recent Advances in Networking",
    "code": "E81 CSE 570S",
    "description": "This course covers the latest advances in networking. The topics include Networking Trends, Data Center Network Topologies, Data Center Ethernet, Server Virtualization, Storage Virtualization, Carrier Ethernet, Application Delivery Networking, Virtual Bridging, Big Data, Networking Issues for Big Data, LAN Extension and Virtualization using Layer 3 Protocols, Multi-Tenant Isolation and Network Virtualization in Cloud Data Centers, OpenFlow, OpenFlow Controllers and Tools, Software Defined Networking (SDN), Network Function Virtualization (NFV), Internet of Things (IoT), Networking Protocols for IoT, Blockchains, and Quantum Communications. Students also do a project/survey involving application of these topics.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=570S",
    "prerequisites": ""
  },
  {
    "title": "Network Security",
    "code": "E81 CSE 571S",
    "description": "This course covers principles and techniques in securing computer networks. Real world examples will be used to illustrate the rationales behind various security designs. There are three main components in the course, preliminary cryptography, network protocol security and network application security. Topics include IPSec, SSL/TLS, HTTPS, network fingerprinting, network malware, anonymous communication, and blockchain. The class project allows students to take a deep dive into a topic of choice in network security.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=571S",
    "prerequisites": "CSE 473S"
  },
  {
    "title": "Recent Advances in Wireless and Mobile Networking",
    "code": "E81 CSE 574S",
    "description": "This course provides a comprehensive treatment of wireless data and telecommunication networks. Topics include recent trends in wireless and mobile networking, wireless coding and modulation, wireless signal propagation, IEEE 802.11a/b/g/n/ac wireless local area networks, 60 GHz millimeter wave gigabit wireless networks, vehicular wireless networks, white spaces, Bluetooth and Bluetooth Smart, wireless personal area networks, wireless protocols for the Internet of Things, cellular networks: 1G/2G/3G, LTE, LTE-Advanced, and 5G.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=574S",
    "prerequisites": "CSE 473S (Introduction to Computer Networks) or permission of the instructor"
  },
  {
    "title": "Approximation Algorithms",
    "code": "E81 CSE 581T",
    "description": "Numerous optimization problems are intractable to solve optimally. The intractability of a problem could come from the problem's computational complexity, for instance the problem is NP-Hard, or other computational barriers. To cope with the inability to find an optimal algorithm, one may desire an algorithm that is guaranteed to return a solution that is comparable to the optimum. Such an algorithm is known as an approximation algorithm. Approximation algorithms are a robust way to cope with intractability and they are widely used in practice or are used to guide the development of practical heuristics. The area of approximation algorithms has developed a vast theory, revealing the underlying structure of problems as well as their different levels of difficulty. The majority of this course will focus on fundamental results and widely applicable algorithmic and analysis techniques for approximation algorithms.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=581T",
    "prerequisites": "CSE 347"
  },
  {
    "title": "Algorithms for Biosequence Comparison",
    "code": "E81 CSE 584A",
    "description": "This course surveys algorithms for comparing and organizing discrete sequential data, especially nucleic acid and protein sequences. Emphasis is on tools to support search in massive biosequence databases and to perform fundamental comparison tasks such as DNA short-read alignment. Prerequisite: CSE 347 or permission of instructor. These techniques are also of interest for more general string processing and for building and mining textual databases. Algorithms are presented rigorously, including proofs of correctness and running time where feasible. Topics include classical string matching, suffix array string indices, space-efficient string indices, rapid inexact matching by filtering (including BLAST and related tools), and alignment-free algorithms. Students complete written assignments and implement advanced comparison algorithms to address problems in bioinformatics. This course does not require a biology background.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=584A",
    "prerequisites": "CSE 347 or instructor permission Revised: 2019-02-21"
  },
  {
    "title": "Analysis of Imaging Data",
    "code": "E81 CSE 586A",
    "description": "This course focuses on an in-depth study of advanced topics and interests in image data analysis. Students will learn about hardcore imaging techniques and gain the mathematical fundamentals needed to build their own models for effective problem solving. Topics of deformable image registration, numerical analysis, probabilistic modeling, data dimensionality reduction, and convolutional neural networks for image segmentation will be covered. The main focus might change from semester to semester.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=586A",
    "prerequisites": "Math 309, ESE 326, and CSE 247"
  },
  {
    "title": "Algorithms for Computational Biology",
    "code": "E81 CSE 587A",
    "description": "This course is a survey of algorithms and mathematical methods in biological sequence analysis (with a strong emphasis on probabilistic methods) and systems biology. Sequence analysis topics include introduction to probability, probabilistic inference in missing data problems, hidden Markov models (HMMs), sequence alignment, and identification of transcription-factor binding sites. Systems biology topics include the mapping of gene regulatory networks, quantitative modeling of gene regulatory networks, synthetic biology, and applications of deep learning in computational biology.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=587A",
    "prerequisites": "CSE 131 or CSE 501N"
  },
  {
    "title": "Introduction to Graduate Study in CSE",
    "code": "E81 CSE 591",
    "description": "Introduces students to the different areas of research conducted in the department. Provides an introduction to research skills, including literature review, problem formulation, presentation, and research ethics. Lecture and discussion are supplemented by exercises in the different research areas and in critical reading, idea generation, and proposal writing.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=591",
    "prerequisites": ""
  },
  {
    "title": "Masters Project",
    "code": "E81 CSE 598",
    "description": "Students electing the project option for their master's degree perform their project work under this course. In order to successfully complete this course, students must defend their project before a three person committee and present a 2-3 page extended abstract.",
    "units": 6,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=598",
    "prerequisites": "permission of adviser and submission of a research proposal form"
  },
  {
    "title": "Masters Research",
    "code": "E81 CSE 599",
    "description": "Students electing the thesis option for their master's degree perform their thesis research under this course. In order to successfully complete a master's thesis, students must enroll in 6 units of this course typically over the course of two consecutive semesters, produce a written thesis, and defend the thesis before a three person committee.",
    "units": 6,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E81&crs=599",
    "prerequisites": "permission of adviser and submission of a research proposal form"
  },
  {
    "title": "College Writing I",
    "code": "L59 CWP 100",
    "description": "This course teaches writing as a way of thinking and learning. Throughout the semester, students will explore writing as a creative and intellectual process. They will learn how to brainstorm, explore, and structure ideas on a page; share their writing and learn how to give and take constructive criticism; and learn how to revise their work, both for issues related to the paper's larger idea, and for issues related to grammar and style. By regularly working their way through the writing process, students will develop the habits and skills that make advanced study possible: paying close attention to the words and ideas of others; coming up with and responding to arguments of others; and refining a lucid style of prose that meets the expectations of the audience and occasion. THIS COURSE SATISFIES THE FIRST-YEAR WRITING REQUIREMENT FOR ALL DIVISIONS.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=L&dept=L59&crs=100",
    "prerequisites": ""
  },
  {
    "title": "Technical Writing",
    "code": "E60 Engr 310",
    "description": "Persistent concerns of grammar and style. Analysis and discussion of clear sentence and paragraph structure and of organization in complete technical documents. Guidelines for effective layout and graphics. Examples and exercises stressing audience analysis, graphic aids, editing, and readability. Videotaped work in oral presentation of technical projects. Writing assignments include descriptions of mechanisms, process instructions, basic proposals, letters and memos, and a long formal report.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E60&crs=310",
    "prerequisites": "Satisfaction of the English composition proficiency requirement of the School and junior standing"
  },
  {
    "title": "Probability and Statistics for Engineering",
    "code": "E35 ESE 326",
    "description": "Study of probability and statistics together with engineering applications. Probability and statistics: random variables, distribution functions, density functions, expectations, means, variances, combinatorial probability, geometric probability, normal random variables, joint distribution, independence, correlation, conditional probability, Bayes theorem, the law of large numbers, the central limit theorem. Applications: reliability, quality control, acceptance sampling, linear regression, design and analysis of experiments, estimation, hypothesis testing. Examples are taken from engineering applications.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=E&dept=E35&crs=326",
    "prerequisites": "Math 233 or equivalent"
  },
  {
    "title": "Matrix Algebra",
    "code": "L24 Math 309",
    "description": "An introductory course in linear algebra that focuses on Euclidean n-space, matrices and related computations. Topics include: systems of linear equations, row reduction, matrix operations, determinants, linear independence, dimension, rank, change of basis, diagonalization, eigenvalues, eigenvectors, orthogonality, symmetric matrices, least square approximation, quadratic forms. Introduction to abstract vector spaces.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=L&dept=L24&crs=309",
    "prerequisites": ""
  },
  {
    "title": "Calculus I",
    "code": "L24 Math 131",
    "description": "Derivatives of algebraic, trigonometric, and transcendental functions, techniques of differentiation and applications of the derivative. The definite integral and Fundamental Theorem of Calculus. Areas. Simpler integration techniques.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=L&dept=L24&crs=131",
    "prerequisites": "high school algebra and precalculus (including trigonometry)"
  },
  {
    "title": "Calculus II",
    "code": "L24 Math 132",
    "description": "Continuation of Math 131. A brief review of the definite integral and Fundamental Theorem of Calculus. Techniques of integration, applications of the integral, sequences and series, and some material on differential equations.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=L&dept=L24&crs=132",
    "prerequisites": "Math 131"
  },
  {
    "title": "Calculus III",
    "code": "L24 Math 233",
    "description": "Multivariable calculus. Topics include differential and integral calculus of functions of two or three variables: vectors and curves in space, partial derivatives, multiple integrals, line integrals, vector calculus at least through Green's Theorem.",
    "units": 3,
    "url": "https://courses.wustl.edu/CourseInfo.aspx?sch=L&dept=L24&crs=233",
    "prerequisites": "Math 132"
  }
]
